language: android
sudo: required
jdk: oraclejdk8

before_cache:
 - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
 - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
 directories:
 - $HOME/.gradle/caches/
 - $HOME/.gradle/wrapper/

env:
 global:
 - ANDROID_API=26
 - EMULATOR_API=22
 - ANDROID_BUILD_TOOLS=26.0.1
 - ADB_INSTALL_TIMEOUT=5 # minutes

android:
 components:
 - tools
 - platform-tools
 - build-tools-$ANDROID_BUILD_TOOLS
 - android-$ANDROID_API
 - android-22
 - extra-google-m2repository
 - extra-android-m2repository # for design library
 - addon-google_apis-google-19 # google play services
 - sys-img-armeabi-v7a-addon-google_apis-google-22
 licenses:
 - android-sdk-preview-license-.+
 - android-sdk-license-.+
 - google-gdk-license-.+

addons:
  apt_packages:
  - pandoc
  artifacts:
    paths:
    - $(git ls-files -o | grep build/outputs | tr "\n" ":")

before_install:
- pip install --user codecov
- android list targets
- android list sdk --no-ui --all --extended | grep -E '^id:' | awk -F '"' '{$1=""; print $2}' # <---- list all available components
- echo "y" | android update sdk -a --no-ui --filter sys-img-armeabi-v7a-android-22,sys-img-x86_64-android-22
- android list targets
- mkdir "$ANDROID_HOME/licenses" || true
- echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
- echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
- chmod +x gradlew
- ./gradlew dependencies || true

before_script:
- echo no | android create avd --force -n test -t "android-22" --abi armeabi-v7a
- emulator -avd test -no-skin -no-audio -no-window &
- android-wait-for-emulator
- adb shell input keyevent 82 &
- ./gradlew connectedAndroidTest -PdisablePreDex --continue --stacktrace
- rm /home/travis/.gradle/caches/2.8/plugin-resolution/cache.properties.lock

after_failure:
- wget http://imgur.com/tools/imgurbash.sh
- chmod a+x imgurbash.sh
- adb shell screencap -p | sed 's/\r$//' &gt; screen.png
- ./imgurbash.sh screen.png
- pandoc builder/build/reports/tests/index.html -t plain | sed -n '/^Failed tests/,/default-package/p'

after_success:
- ./gradlew jacocoFullReport
- pip install --user codecov
- codecov

script:
- "./gradlew clean build connectedCheck -PdisablePreDex --stacktrace"


after_script:
  # print lint results details
- for f in app/build/outputs/lint-results.html; do pandoc $f -t plain; done
- for f in data/build/outputs/lint-results.html; do pandoc $f -t plain; done
# Tutorial here: https://medium.com/@harmittaa/travis-ci-android-example-
# 357f6e632fc4

